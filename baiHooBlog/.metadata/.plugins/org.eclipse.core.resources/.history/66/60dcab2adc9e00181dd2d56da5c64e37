package com.baihoo.springboot.fileserver.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.stereotype.Service;

import com.baihoo.springboot.fileserver.common.criteria.MeCriteria;
import com.baihoo.springboot.fileserver.domain.File;
import com.baihoo.springboot.fileserver.repository.FileRepository;

/**
 * File 服务.
 * @author Administrator
 *
 */
@Service
public class FileServiceImpl implements FileService {
	/**
	 * @param fileRepository 
	 * @param mongoTemplate 
	 */
	@Autowired
	public FileRepository fileRepository;
	@Autowired
    protected MongoTemplate mongoTemplate;
	
	
	@Override
	public File saveFile(File file) {
		return fileRepository.save(file);
	}

	@Override
	public void removeFile(String id) {
		fileRepository.deleteById(id);
	}

	@Override
	public Optional<File> getFileById(String id) {
		return fileRepository.findById(id);
	}

	@Override
	public List<File> listFilesByPage(int pageIndex, int pageSize) {
		Page<File> page = null;
		List<File> list = null;
		
		Sort sort = new Sort(Direction.DESC,"uploadDate"); 
		Pageable pageable = PageRequest.of(pageIndex, pageSize, sort);
		
		page = fileRepository.findAll(pageable);
		list = page.getContent();
		return list;
	}

	@Override
	public Page<File> listFilesByPage(Pageable pageable) {
		Page<File> page = fileRepository.findAll(pageable);
		return page;
	}

	@Override
	public Page<File> listFilesByPage(Pageable page, MeCriteria meCriteria) {
		Criteria sysCriteria = new Criteria();
		Query query=new Query(sysCriteria);
		mongoTemplate.find(query, File.class);
		return null;
	}
}
