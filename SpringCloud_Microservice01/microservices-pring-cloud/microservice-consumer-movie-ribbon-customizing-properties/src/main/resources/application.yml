server:
  servlet:
    context-path: /msmovie
  port: 8901
logging:
  pattern:
    console: '%d - %msg%n'
    level:
      com.baihoomuch.cloud: info
  path: G:/IntelliJ_IDEALog/IDEA_Microservice/microservices-pring-cloud
  file: G:/IntelliJ_IDEALog/IDEA_Microservice/microservices-pring-cloud/microserviceConsumerMovieRibbon2.log
# eureka.client.registerWithEureka ：表示是否将自己注册到Eureka Server，默认为true。由于当前这个应用就是Eureka Server，故而设为false
# eureka.client.fetchRegistry ：表示是否从Eureka Server获取注册信息，默认为true。因为这是一个单点的Eureka Server，不需要同步其他的Eureka Server节点的数据，故而设为false。
# eureka.client.serviceUrl.defaultZone ：设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。默认是http://localhost:8761/eureka ；多个地址可使用 , 分隔。
spring:
  application:
    name: microservice-consumer-movie-ribbon-customizing-properties
eureka:
  client:
    service-url:
      defaultZone: http://admin:admin@localhost:8761/eureka/
  instance:
    #默認是 false，是否啓動IP訪問
    prefer-ip-address: true
    # 改配置相當與 IP地址:我的應用名稱:端口
    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
# microservice-provider-user 要被调用的微服务项   
microservice-provider-user: 
  ribbon: 
    # 配置什么规则来负载均衡， 默认提供根据相应时间加权的规则，com.netflix.loadbalancer.WeightedResponseTimeRule
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule    